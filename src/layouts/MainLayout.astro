---
import "../styles/global.css";
import SiteNav from "../components/SiteNav.astro";
import SiteFooter from "../components/SiteFooter.astro";
import Availabilty from "../components/Availabilty.astro";
import Aside from "../components/Aside.astro";
import { navQuery } from "../lib/api";
const { menus, generalSettings } = await navQuery();
const primaryMenu = menus.nodes[0];
const { title, description, slug, layout, side_components } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5" />
    <meta name="msapplication-TileColor" content="#da532c" />
    <meta name="theme-color" content="#ffffff" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{`${title} | ${generalSettings.title}`}</title>
    <meta name="description" content={description} />
  </head>
  <body class={slug}>
    <div class="wrap">
      <SiteNav menu={primaryMenu} generalSettings={generalSettings} />
      <main class={layout ? layout : "wide"}>
        <slot />
        {
          layout == "split" && (
            <aside>
              {side_components.map((content) => {
                return <Aside content={content} />;
              })}
            </aside>
          )
        }
      </main>
      <SiteFooter />
    </div>
  </body>
</html>

<style lang="scss">
  .wrap {
    margin: auto;
    display: flex;
    flex-direction: column;
    height: 100vh;
    justify-content: space-between;
    margin: 0 auto;
    position: relative;
    z-index: 2;
  }

  main {
    max-width: 1380px;
    margin: 0 auto;
    padding: 4rem 2rem;
    flex: 1 1 100%;

    &.split {
      display: flex;
      flex-direction: column;

      @media all and (min-width: 960px) {
        flex-direction: row;
      }

      aside {
        @media all and (min-width: 960px) {
          flex: 1 1 32%;
          padding: 8rem 2rem 0 6rem;
        }
      }
    }
  }
</style>
